{
  "parser_name": "ComfyUI (Flux/GGUF Style)",
  "priority": 142,
  "target_file_types": ["PNG"],

  "detection_rules": [
    {
      "comment": "Rule 1: Must have ComfyUI JSON structure",
      "condition": "OR",
      "rules": [
        {
          "source_type": "pil_info_key",
          "source_key": "workflow",
          "operator": "is_valid_json"
        },
        {
          "source_type": "pil_info_key",
          "source_key": "prompt",
          "operator": "is_valid_json"
        }
      ]
    },
    {
      "comment": "Rule 2: Must have DualCLIPLoaderGGUF with type='flux'",
      "source_type": "pil_info_key_json_path_query",
      "source_key_options": ["workflow", "prompt"],
      "json_query_type": "has_node_with_class_and_input_value",
      "class_type": "DualCLIPLoaderGGUF",
      "input_key": "type",
      "expected_input_value": "flux",
      "operator": "is_true"
    },
    {
      "comment": "Rule 3: Must contain SamplerCustomAdvanced or similar FLUX sampler",
      "source_type": "pil_info_key_json_path_query",
      "source_key_options": ["workflow", "prompt"],
      "json_query_type": "has_any_node_class_type",
      "class_types_to_check": [
        "SamplerCustomAdvanced",
        "BasicGuider"
      ],
      "operator": "is_true"
    },
    {
      "comment": "Rule 4: Not a Civitai format",
      "source_type": "pil_info_key_json_path",
      "source_key_options": ["workflow", "prompt"],
      "json_path": "extra.extraMetadata",
      "operator": "not_exists"
    }
  ],

  "parsing_instructions": {
    "input_data": {
      "source_options": [
        {"source_type": "pil_info_key", "source_key": "workflow"},
        {"source_type": "pil_info_key", "source_key": "prompt"}
      ],
      "transformations": [{"type": "json_decode_string_itself"}]
    },

    "fields": [
      {
        "comment": "Extract prompt from CLIPTextEncode node",
        "target_key": "prompt",
        "method": "comfy_get_node_by_class",
        "class_type": "CLIPTextEncode",
        "field_name": "text"
      },
      {
        "comment": "Extract FLUX model name",
        "target_key": "parameters.model",
        "method": "comfy_get_node_by_class",
        "class_type": "UnetLoaderGGUF",
        "field_name": "unet_name"
      },
      {
        "comment": "Extract sampler name from KSamplerSelect",
        "target_key": "parameters.sampler_name",
        "method": "comfy_get_node_by_class",
        "class_type": "KSamplerSelect",
        "field_name": "sampler_name"
      }
    ],

    "output_template": {
      "tool": "ComfyUI (FLUX/GGUF)",
      "parser_version": "flux_specific",
      "prompt": "$prompt",
      "parameters": {
        "model": "$parameters.model",
        "sampler_name": "$parameters.sampler_name"
      },
      "workflow_info": {
        "detected_as": "FLUX workflow",
        "uses_gguf": true
      }
    }
  }
}
