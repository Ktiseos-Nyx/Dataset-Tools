[
    {
        "id": "UgRaLlJhevp_Ey7dYEf19",
        "name": "All_in_One"
    },
    {
        "id": 4,
        "name": "CheckpointLoaderSimple"
    },
    {
        "id": 43,
        "name": "ModelSamplingDiscrete"
    },
    {
        "id": 200,
        "name": "VAELoader",
        "prompts": {
            "text": "xlVAEC_e7.safetensors"
        }
    },
    {
        "id": 318,
        "name": "UpscaleModelLoader"
    },
    {
        "id": 410,
        "name": "VAEEncodeTiled"
    },
    {
        "id": 455,
        "name": "EmptyLatentImage"
    },
    {
        "id": 516,
        "name": "UltimateSDUpscale"
    },
    {
        "id": 529,
        "name": "PreviewImage"
    },
    {
        "id": 551,
        "name": "MaskToImage"
    },
    {
        "id": 602,
        "name": "Reroute"
    },
    {
        "id": 605,
        "name": "CR Switch Model and CLIP"
    },
    {
        "id": 703,
        "name": "CR Apply LoRA Stack"
    },
    {
        "id": 715,
        "name": "ImageBlend"
    },
    {
        "id": 717,
        "name": "Canny"
    },
    {
        "id": 720,
        "name": "VAELoader",
        "prompts": {
            "text": "xlVAEC_c91.safetensors"
        }
    },
    {
        "id": 727,
        "name": "InpaintModelConditioning"
    },
    {
        "id": 832,
        "name": "ImpactSwitch"
    },
    {
        "id": 834,
        "name": "ImpactSwitch"
    },
    {
        "id": 867,
        "name": "workflow/Contrast Fix & Sharpen"
    },
    {
        "id": 872,
        "name": "ImpactSwitch"
    },
    {
        "id": 884,
        "name": "workflow/Contrast Fix & Sharpen"
    },
    {
        "id": 885,
        "name": "workflow/Contrast Fix & Sharpen"
    },
    {
        "id": 918,
        "name": "Fast Groups Bypasser (rgthree)"
    },
    {
        "id": 1065,
        "name": "KSamplerAdvanced",
        "prompts": {
            "text": "euler_ancestral"
        }
    },
    {
        "id": 1066,
        "name": "VAEDecodeTiled"
    },
    {
        "id": 1071,
        "name": "VAEDecodeTiled"
    },
    {
        "id": 1072,
        "name": "KSamplerAdvanced",
        "prompts": {
            "text": "euler_ancestral"
        }
    },
    {
        "id": 1092,
        "name": "Latent Noise Injection"
    },
    {
        "id": 1093,
        "name": "Mute / Bypass Relay (rgthree)"
    },
    {
        "id": 1095,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1098,
        "name": "Mute / Bypass Relay (rgthree)"
    },
    {
        "id": 1100,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1101,
        "name": "Mute / Bypass Relay (rgthree)"
    },
    {
        "id": 1102,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1103,
        "name": "Reroute"
    },
    {
        "id": 1105,
        "name": "Reroute"
    },
    {
        "id": 1106,
        "name": "Reroute"
    },
    {
        "id": 1107,
        "name": "Reroute"
    },
    {
        "id": 1127,
        "name": "CR Apply Multi-ControlNet"
    },
    {
        "id": 1128,
        "name": "CR Multi-ControlNet Stack"
    },
    {
        "id": 1178,
        "name": "CR Apply Multi-ControlNet"
    },
    {
        "id": 1194,
        "name": "PreviewImage"
    },
    {
        "id": 1199,
        "name": "MaskToImage"
    },
    {
        "id": 1200,
        "name": "PreviewImage"
    },
    {
        "id": 1242,
        "name": "CR SDXL Base Prompt Encoder"
    },
    {
        "id": 1251,
        "name": "workflow/CLIP Text Encode 1.5"
    },
    {
        "id": 1253,
        "name": "Reroute"
    },
    {
        "id": 1255,
        "name": "CLIPSetLastLayer"
    },
    {
        "id": 1265,
        "name": "CR LoRA Stack"
    },
    {
        "id": 1295,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1296,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1297,
        "name": "Fast Groups Bypasser (rgthree)"
    },
    {
        "id": 1302,
        "name": "CR SDXL Base Prompt Encoder"
    },
    {
        "id": 1303,
        "name": "workflow/CLIP Text Encode 1.5"
    },
    {
        "id": 1304,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1305,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1309,
        "name": "CR SDXL Base Prompt Encoder"
    },
    {
        "id": 1310,
        "name": "workflow/CLIP Text Encode 1.5"
    },
    {
        "id": 1311,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1312,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1313,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1314,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1315,
        "name": "Mute / Bypass Relay (rgthree)"
    },
    {
        "id": 1316,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1317,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1318,
        "name": "Mute / Bypass Relay (rgthree)"
    },
    {
        "id": 1320,
        "name": "Note",
        "prompts": {
            "text": "TLDR\n\nThis workflow was created in the process of exploring the comfyui features with an attempt to maximize coverage of image generation control approaches and different model types without creating another workflow and juggling spaghetti for the slightest reasons. At the same time, using only the necessary minimum. So, I also hope it will be useful for newbies at comfyui.\n\nI highly recommend checking out the guides from the LatentVision YT channel: https://www.youtube.com/@latentvision. It gives an understanding of the basics and many details about IP adapters, and about 150% understanding of this workflow.\n\nFeatures of this workflow: \n- Works for both SD 1.5 and XL.\n- Supports LoRA, ControlNet(t2i adapter), IPadapter(for style and composition transfer - conditioning from image), inpainting, HiresFix(latent upscale), USD upscale(image upscale).\n- You can easily disable any stage, and change latent/image source for it.\n- Added nodes that fixes model color space. See details in https://huggingface.co/blog/TimothyAlexisVass/explaining-the-sdxl-latent-space.\n\nSo, how to use this creepy mess?\n\nLong story short: see the Settings Panel group, read its node titles and switch the toggles you want.\n\nBelow are a few non-obvious points for which I have not yet come up with concise solutions, or there are none. And some useful links.\n- Image load & resize nodes use the shape set in the settings panel. I guess it's a more common use case.\n- On the right side, under the image comparer nodes, hidden img save nodes. You can change them to some custom image saver node with more features.\n- ComfyUI by default does not save much information about the generation configuration. Except for the state of the workflow in image metadata. If you want to edit it manually or in the workflow, use the SD Prompt Reader Node (which can be used as a local app).\n- Some groups have # in the title and repeaters and receivers nodes (right to the settings panel). It is not necessary to change these elements, otherwise, the radio buttons may not work as expected.\n- Image comparers automatically show the stage source (latent - itself, file, txt2img, img2img) and its output.\n- Workflow that contains all controlnet preprocessors, use it to find the best for your reference: https://github.com/Fannovel16/comfyui_controlnet_aux/blob/main/tests/test_cn_aux_full.json\n- About SDXL prompting: https://www.reddit.com/r/StableDiffusion/comments/15ggn9w/sdxl_mini_study_clip_g_vs_clip_l_best_prompting/?sort=confidence\n- ControlNet models collection https://huggingface.co/lllyasviel/sd_control_collection\n\n\nSome of the features that are not here, but it's worth paying attention to:\n- Face swap.\n- Masked conditioning.\n\nP.S. Don't be lazy to refine your reference images in any image editor - its most powerful result control tool. And have fun. =)\n\n"
        }
    },
    {
        "id": 1347,
        "name": "ImpactSwitch"
    },
    {
        "id": 1351,
        "name": "CR Switch Model and CLIP"
    },
    {
        "id": 1353,
        "name": "MiDaS-DepthMapPreprocessor"
    },
    {
        "id": 1364,
        "name": "Reroute"
    },
    {
        "id": 1416,
        "name": "IPAdapterStyleComposition",
        "prompts": {
            "text": "norm average"
        }
    },
    {
        "id": 1418,
        "name": "IPAdapterUnifiedLoader",
        "prompts": {
            "text": "STANDARD (medium strength)"
        }
    },
    {
        "id": 1419,
        "name": "PrepImageForClipVision"
    },
    {
        "id": 1423,
        "name": "ImpactSwitch"
    },
    {
        "id": 1424,
        "name": "ImageBlend"
    },
    {
        "id": 1425,
        "name": "InvertMask"
    },
    {
        "id": 1437,
        "name": "LoadAndResizeImage"
    },
    {
        "id": 1438,
        "name": "LoadAndResizeImage"
    },
    {
        "id": 1454,
        "name": "LoadAndResizeImage"
    },
    {
        "id": 1458,
        "name": "PreviewImage"
    },
    {
        "id": 1461,
        "name": "ImageBlend"
    },
    {
        "id": 1462,
        "name": "LineartStandardPreprocessor"
    },
    {
        "id": 1499,
        "name": "Image Comparer (rgthree)"
    },
    {
        "id": 1504,
        "name": "ImpactSwitch"
    },
    {
        "id": 1507,
        "name": "Mask Gaussian Region"
    },
    {
        "id": 1514,
        "name": "RemapMaskRange"
    },
    {
        "id": 1520,
        "name": "Reroute (rgthree)"
    },
    {
        "id": 1525,
        "name": "InpaintModelConditioning"
    },
    {
        "id": 1526,
        "name": "Normalization"
    },
    {
        "id": 1527,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1541,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1542,
        "name": "Recenter"
    },
    {
        "id": 1543,
        "name": "Mute / Bypass Repeater (rgthree)"
    },
    {
        "id": 1544,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1545,
        "name": "Recenter XL"
    },
    {
        "id": 1547,
        "name": "NormalizationXL"
    },
    {
        "id": 1548,
        "name": "Normalization"
    },
    {
        "id": 1549,
        "name": "Any Switch (rgthree)"
    },
    {
        "id": 1550,
        "name": "NormalizationXL"
    },
    {
        "id": 1554,
        "name": "LatentUpscaleBy",
        "prompts": {
            "text": "nearest-exact"
        }
    },
    {
        "id": 1556,
        "name": "Image Comparer (rgthree)"
    },
    {
        "id": 1558,
        "name": "ImpactSwitch"
    },
    {
        "id": 1560,
        "name": "ImpactSwitch"
    },
    {
        "id": 1573,
        "name": "SaveImage"
    },
    {
        "id": 1574,
        "name": "SaveImage"
    },
    {
        "id": 1575,
        "name": "SaveImage"
    },
    {
        "id": 1576,
        "name": "Note",
        "prompts": {
            "text": "You can manually bypass both recenters to generate without it. -------------------->\n"
        }
    },
    {
        "id": 1600,
        "name": "CR LoRA Stack"
    },
    {
        "id": 1619,
        "name": "workflow/CondMix"
    },
    {
        "id": 1620,
        "name": "Image Comparer (rgthree)"
    },
    {
        "id": 1621,
        "name": "SDXLPromptStylerAdvanced"
    },
    {
        "id": 1623,
        "name": "SDXLPromptStylerAdvanced"
    },
    {
        "id": 1624,
        "name": "ConditioningSetTimestepRange"
    },
    {
        "id": 1625,
        "name": "ConditioningSetTimestepRange"
    },
    {
        "id": 1629,
        "name": "SDXLPromptStylerAdvanced"
    },
    {
        "id": 1630,
        "name": "Note",
        "prompts": {
            "text": "Mixed conditioning from both prompts used for stage 1 and stage 2. You can see below, that adding extra conditions becomes messy, because sdxl and sd15 require different prompt encoders. Therefore, we will limit ourselves to two, while retaining the ability to play with both xl and 1.5. So somewhere here, the complexity of the workflow will increase dramatically when you try to add more cool tricks. But don't be afraid to experiment.\n"
        }
    },
    {
        "id": 1676,
        "name": "Seed (rgthree)"
    },
    {
        "id": 1677,
        "name": "GetImageSize+"
    },
    {
        "id": 1678,
        "name": "SimpleMath+"
    },
    {
        "id": 1679,
        "name": "SimpleMath+"
    },
    {
        "id": 1686,
        "name": "workflow/ImgParams"
    },
    {
        "id": 1687,
        "name": "Display Int (rgthree)"
    },
    {
        "id": 1689,
        "name": "Display Int (rgthree)"
    },
    {
        "id": 1691,
        "name": "SimpleMath+"
    },
    {
        "id": 1692,
        "name": "SimpleMath+"
    },
    {
        "id": 1696,
        "name": "Display Int (rgthree)"
    },
    {
        "id": 1697,
        "name": "Display Int (rgthree)"
    },
    {
        "id": 1698,
        "name": "Note",
        "prompts": {
            "text": "Pre-evaluated width and height after upscaling. Set the size as the tile size if your device has enough resources. You can also just convert the tile size as input and pass it directly."
        }
    }
]