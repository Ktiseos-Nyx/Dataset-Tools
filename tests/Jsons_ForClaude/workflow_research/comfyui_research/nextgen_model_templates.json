{
  "comment": "JSON Templates for Next-Gen Model Architectures - Image Generation Only",
  "note": "These templates show the unique metadata structures for new model architectures",
  
  "sd3_template": {
    "parser_name": "SD3/SD3.5 Detection Template",
    "detection_signatures": [
      "shift: 3.0",
      "t5xxl text encoder",
      "SD3 in workflow nodes",
      "16 input channels"
    ],
    "example_metadata": {
      "tool": "ComfyUI",
      "model_architecture": "SD3",
      "prompt": "a beautiful sunset over mountains",
      "negative_prompt": "",
      "parameters": {
        "model": "sd3_medium.safetensors",
        "steps": 28,
        "cfg_scale": 7.0,
        "sampler_name": "dpmpp_2m",
        "scheduler": "sgm_uniform",
        "seed": 123456789,
        "width": 1024,
        "height": 1024
      },
      "sd3_specific": {
        "shift": 3.0,
        "text_encoder": "t5xxl",
        "latent_channels": 16,
        "memory_usage_factor": 1.2,
        "clip_skip": null
      },
      "workflow_nodes": [
        "CheckpointLoaderSimple",
        "CLIPTextEncode", 
        "KSampler",
        "VAEDecode"
      ]
    }
  },

  "flux_template": {
    "parser_name": "Flux (GGUF/Schnell/Dev) Detection Template", 
    "detection_signatures": [
      "DualCLIPLoaderGGUF",
      "guidance_embed: true/false",
      "flux in model name",
      "flow model type"
    ],
    "example_metadata": {
      "tool": "ComfyUI",
      "model_architecture": "Flux",
      "prompt": "a majestic dragon soaring through clouds",
      "negative_prompt": "",
      "parameters": {
        "model": "flux1-dev-Q4_K_S.gguf",
        "steps": 20,
        "cfg_scale": 1.0,
        "sampler_name": "euler",
        "scheduler": "simple",
        "seed": 987654321,
        "width": 1024,
        "height": 1024
      },
      "flux_specific": {
        "guidance_embed": true,
        "model_type": "flow",
        "gguf_format": true,
        "quantization": "Q4_K_S",
        "memory_usage_factor": 2.8,
        "schnell_mode": false,
        "distilled_cfg": false
      },
      "workflow_nodes": [
        "DualCLIPLoaderGGUF",
        "UnetLoaderGGUF",
        "CLIPTextEncode",
        "BasicGuider",
        "SamplerCustomAdvanced"
      ]
    }
  },

  "hunyuandit_template": {
    "parser_name": "HunyuanDiT Detection Template",
    "detection_signatures": [
      "image_model: hydit",
      "HyditTokenizer",
      "Chinese text processing",
      "linear_start/linear_end sampling"
    ],
    "example_metadata": {
      "tool": "ComfyUI",
      "model_architecture": "HunyuanDiT",
      "prompt": "一个美丽的花园 (a beautiful garden)",
      "negative_prompt": "低质量 (low quality)",
      "parameters": {
        "model": "hunyuan_dit_1.2.safetensors",
        "steps": 25,
        "cfg_scale": 6.0,
        "sampler_name": "ddpm",
        "scheduler": "normal",
        "seed": 456789123,
        "width": 1024,
        "height": 1024
      },
      "hunyuandit_specific": {
        "image_model": "hydit",
        "linear_start": 0.00085,
        "linear_end": 0.018,
        "memory_usage_factor": 1.3,
        "text_encoder": "HyditTokenizer",
        "chinese_text_support": true,
        "attn_precision": "float32"
      },
      "workflow_nodes": [
        "HunyuanDiTCheckpointLoader",
        "HunyuanDiTTextEncode",
        "HunyuanDiTSampler"
      ]
    }
  },

  "pixart_template": {
    "parser_name": "PixArt Alpha/Sigma Detection Template",
    "detection_signatures": [
      "image_model: pixart_alpha/pixart_sigma",
      "PixArt in model name",
      "T5 text encoder",
      "beta_schedule: sqrt_linear"
    ],
    "example_metadata": {
      "tool": "ComfyUI", 
      "model_architecture": "PixArt-Sigma",
      "prompt": "photorealistic portrait of a wise old wizard",
      "negative_prompt": "blurry, low quality, distorted",
      "parameters": {
        "model": "PixArt-Sigma-XL-2-1024-MS.safetensors",
        "steps": 20,
        "cfg_scale": 4.5,
        "sampler_name": "dpm_2",
        "scheduler": "karras",
        "seed": 789123456,
        "width": 1024,
        "height": 1024
      },
      "pixart_specific": {
        "image_model": "pixart_sigma",
        "beta_schedule": "sqrt_linear",
        "linear_start": 0.0001,
        "linear_end": 0.02,
        "timesteps": 1000,
        "memory_usage_factor": 0.5,
        "text_encoder": "T5-XXL",
        "efficient_attention": true
      },
      "workflow_nodes": [
        "PixArtCheckpointLoader",
        "PixArtTextEncode",
        "PixArtSampler"
      ]
    }
  },

  "stable_cascade_template": {
    "parser_name": "Stable Cascade Detection Template",
    "detection_signatures": [
      "stable_cascade_stage: a/b/c",
      "cascade in model name", 
      "multi-stage parameters",
      "Würstchen architecture"
    ],
    "example_metadata": {
      "tool": "ComfyUI",
      "model_architecture": "Stable Cascade",
      "prompt": "a cyberpunk cityscape at night",
      "negative_prompt": "blurry, low resolution",
      "parameters": {
        "stage_a_model": "stage_a.safetensors",
        "stage_b_model": "stage_b.safetensors", 
        "stage_c_model": "stage_c.safetensors",
        "steps_stage_c": 20,
        "steps_stage_b": 10,
        "cfg_scale": 4.0,
        "seed": 321654987,
        "width": 1024,
        "height": 1024
      },
      "cascade_specific": {
        "stable_cascade_stage": "full_pipeline",
        "compression_factor": 42,
        "multi_stage_generation": true,
        "stage_c_resolution": "24x24",
        "stage_b_resolution": "256x256", 
        "final_resolution": "1024x1024",
        "memory_efficient": true
      },
      "workflow_nodes": [
        "StableCascade_StageC_VAELoader",
        "StableCascade_StageB_Conditioning",
        "StableCascade_MultiStageGeneration"
      ]
    }
  },

  "chroma_template": {
    "parser_name": "Chroma Detection Template",
    "detection_signatures": [
      "image_model: chroma",
      "distilled_guidance_layer",
      "Flux-based latent format",
      "high memory usage (3.2x)"
    ],
    "example_metadata": {
      "tool": "ComfyUI",
      "model_architecture": "Chroma",
      "prompt": "vibrant abstract art with flowing colors",
      "negative_prompt": "",
      "parameters": {
        "model": "chroma_v1.safetensors",
        "steps": 25,
        "cfg_scale": 7.0,
        "sampler_name": "euler_ancestral",
        "scheduler": "normal",
        "seed": 147258369,
        "width": 1024,
        "height": 1024
      },
      "chroma_specific": {
        "image_model": "chroma",
        "distilled_guidance": true,
        "latent_format": "flux",
        "memory_usage_factor": 3.2,
        "in_channels": 64,
        "out_channels": 64,
        "hidden_dim": 5120,
        "n_layers": 5,
        "color_enhancement": true
      },
      "workflow_nodes": [
        "ChromaCheckpointLoader",
        "ChromaTextEncode",
        "ChromaSampler"
      ]
    }
  },

  "kolors_template": {
    "parser_name": "Kolors Detection Template",
    "detection_signatures": [
      "kolors in model name",
      "SDXL base with modifications",
      "Chinese language support",
      "ChatGLM text encoder"
    ],
    "example_metadata": {
      "tool": "ComfyUI",
      "model_architecture": "Kolors",
      "prompt": "传统中国山水画风格的风景 (traditional Chinese landscape painting style scenery)",
      "negative_prompt": "现代风格 (modern style)",
      "parameters": {
        "model": "Kolors-1.0.safetensors",
        "steps": 25,
        "cfg_scale": 5.0,
        "sampler_name": "dpmpp_2m_sde",
        "scheduler": "karras",
        "seed": 963852741,
        "width": 1024,
        "height": 1024
      },
      "kolors_specific": {
        "base_architecture": "SDXL",
        "text_encoder": "ChatGLM3-6B",
        "chinese_optimized": true,
        "multilingual_support": true,
        "cultural_understanding": "enhanced",
        "model_size": "large",
        "fine_tuned_for": "asian_aesthetics"
      },
      "workflow_nodes": [
        "KolorsCheckpointLoader", 
        "KolorsChatGLMTextEncode",
        "KolorsSampler"
      ]
    }
  },

  "auraflow_template": {
    "parser_name": "AuraFlow Detection Template",
    "detection_signatures": [
      "AuraFlow in model name",
      "T5 text encoder",
      "shift: 1.73",
      "SDXL latent format"
    ],
    "example_metadata": {
      "tool": "ComfyUI",
      "model_architecture": "AuraFlow",
      "prompt": "ethereal forest with glowing mushrooms",
      "negative_prompt": "dark, gloomy, dead",
      "parameters": {
        "model": "auraflow-v0.2.safetensors",
        "steps": 30,
        "cfg_scale": 3.5,
        "sampler_name": "euler",
        "scheduler": "normal", 
        "seed": 159357468,
        "width": 1024,
        "height": 1024
      },
      "auraflow_specific": {
        "multiplier": 1.0,
        "shift": 1.73,
        "cond_seq_dim": 2048,
        "text_encoder": "AuraT5",
        "latent_format": "SDXL",
        "flow_based": true,
        "open_source": true
      },
      "workflow_nodes": [
        "AuraFlowLoader",
        "AuraT5TextEncode", 
        "AuraFlowSampler"
      ]
    }
  },

  "detection_priority_order": {
    "comment": "Order to check for these architectures (highest priority first)",
    "order": [
      "chroma",
      "flux", 
      "sd3",
      "hunyuandit",
      "stable_cascade",
      "pixart",
      "kolors",
      "auraflow"
    ],
    "reasoning": "Most specific signatures first, then broader patterns"
  },

  "common_detection_patterns": {
    "model_name_indicators": {
      "flux": ["flux", "gguf"],
      "sd3": ["sd3", "sd3.5", "medium"],
      "hunyuandit": ["hunyuan", "hydit"],
      "pixart": ["pixart", "alpha", "sigma"],
      "cascade": ["cascade", "wurstchen", "stage"],
      "chroma": ["chroma"],
      "kolors": ["kolors"],
      "auraflow": ["aura", "auraflow"]
    },
    
    "workflow_node_indicators": {
      "flux_nodes": ["DualCLIPLoaderGGUF", "UnetLoaderGGUF", "BasicGuider"],
      "sd3_nodes": ["SD3CheckpointLoader", "TripleCLIPLoader"],
      "cascade_nodes": ["StableCascade", "MultiStage"],
      "pixart_nodes": ["PixArt", "T5TextEncode"],
      "hunyuan_nodes": ["HunyuanDiT", "HyditTokenizer"]
    },

    "parameter_indicators": {
      "flux": {"guidance_embed": "boolean", "gguf_format": true},
      "sd3": {"shift": 3.0, "latent_channels": 16},
      "cascade": {"stable_cascade_stage": "string", "compression_factor": "number"},
      "chroma": {"distilled_guidance": true, "memory_usage_factor": 3.2},
      "pixart": {"beta_schedule": "sqrt_linear", "memory_usage_factor": 0.5}
    }
  },

  "parsing_implementation_notes": {
    "priority": "Check model names and workflow nodes first for quick identification",
    "fallback": "If unclear, examine parameter patterns and memory usage factors", 
    "edge_cases": "Some models (like Kolors) are SDXL-based but need separate handling",
    "future_proofing": "Template structure allows easy addition of new architectures"
  }
}